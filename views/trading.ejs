<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>부동산 게시물 지도 및 목록 표시</title>
    <style>
        .sendBtn{
            display: flex;            /* 플렉스 컨테이너로 설정 */
            justify-content: flex-end; /* 버튼을 오른쪽으로 정렬 */
          
            text-align: center;
            font-size: 20px;          /* 버튼 텍스트 크기 */
             padding: 7px 15px;       /* 버튼 내부 여백 */
            background-color: #007bff; /* 버튼 배경색 */
            color: #fff;              /* 버튼 텍스트 색상 */
            border: none;             /* 버튼 테두리 제거 */
            border-radius: 5px;       /* 버튼 모서리를 둥글게 */
            cursor: pointer;          /* 마우스 커서 변경 */
            transition: background-color 0.3s ease; /* 배경색 전환 효과 */
        }
        .sendBtn:hover {
    background-color: #0056b3; /* 호버 시 배경색 변경 */
}

        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
            font-family: 'Malgun Gothic', dotum, '돋움', sans-serif;
        }
        .map_wrap {
            position: relative;
            width: 100%;
            height: 100%;
        }
        #map {
            width: 100%;
            height: 100%;
            position: relative;
            overflow: hidden;
        }
        #menu_wrap {
            position: absolute;
            top: 10px;
            left: 10px;
            bottom: 10px; /* bottom 속성을 30px에서 10px로 조정하여 더 많은 공간 확보 */
            width: 300px;
            padding: 5px;
            overflow-y: auto;
            background: rgba(255, 255, 255, 0.9);
            z-index: 1;
            font-size: 12px;
            border-radius: 10px;
        }
        .bg_white {
            background: #fff;
        }
        #menu_wrap hr {
            display: block;
            height: 1px;
            border: 0;
            border-top: 2px solid #5F5F5F;
            margin: 3px 0;
        }
        #menu_wrap .option {
            text-align: center;
        }
        #menu_wrap .option p {
            margin: 10px 0;
        }
        #menu_wrap .option button {
            margin-left: 5px;
        }
        #placesList {
            height: calc(100% - 120px); /* 전체 높이를 사용하도록 조정 */
            overflow-y: auto;
        }
        #placesList li {
            list-style: none;
            padding: 5px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background: #f9f9f9;
        }
        #placesList .item {
            position: relative;
            border-bottom: 1px solid #888;
            overflow: hidden;
            cursor: pointer;
            min-height: 65px;
        }
        #placesList .item span {
            display: block;
            margin-top: 4px;
        }
        #placesList .item h5, #placesList .item .info {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }
        #placesList .item .info {
            padding: 10px 0 10px 55px;
        }
        #placesList .info .gray {
            color: #8a8a8a;
        }
        #placesList .info .jibun {
            padding-left: 26px;
            background: url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;
        }
        #placesList .info .tel {
            color: #009900;
        }
        #placesList .item .markerbg {
            float: left;
            position: absolute;
            width: 36px;
            height: 37px;
            margin: 10px 0 0 10px;
            background: url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png) no-repeat;
        }
        #pagination {
            margin: 10px auto;
            text-align: center;
        }
        #pagination a {
            display: inline-block;
            margin-right: 10px;
        }
        #pagination .on {
            font-weight: bold;
            cursor: default;
            color: #777;
        }
    </style>
    <link href="css/style.css" rel="stylesheet" />
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</head>
<body>
    <header class="header_section">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg custom_nav-container ">
                <a class="navbar-brand" href="/">
                    <span>
                        농협은행
                    </span>
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <div class="d-flex ml-auto flex-column flex-lg-row align-items-center">
                        <ul class="navbar-nav  ">
                            <li class="nav-item active">
                                <a class="nav-link" href="/">홈 <span class="sr-only"></span></a>
                            </li>
                            <li class="nav-item ">
                                <a class="nav-link" href="/board"> 매물등록 </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/send"> 자산관리 </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/trading">
                                    <span>부동산찾기</span> 
                                </a>
                            </li>

                            <% if(user) {%>
                           
                                <li class="nav-item">
                                    <a class="nav-link" href="/logout"> 로그아웃</a>
                                  </li>
 
                                <%} else{%>
                                    <li class="nav-item">
                                        <a class="nav-link" href="/login"> 로그인</a>
                                      </li>
                                      <li class="nav-item">
                                          <a class="nav-link" href="/signup"> 회원가입</a>
                                      </li>
 
                                <% } %>

                        </ul>
                        
                    </div>
                </div>
            </nav>
        </div>
    </header>

<div class="map_wrap">
    <div id="map"></div>
   
    <div id="menu_wrap" class="bg_white">
        <div class="option">
            <h4>부동산 목록</h4>
          
        </div>
       
        <hr>
        <ul id="placesList"></ul>
        <div id="pagination"></div>
        

        
            
            
    </div>
    
</div>
<div id="propData" class="hidden"><%= JSON.stringify(propData) %></div>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=3097ec715d6e2fb312433de5f484d018&libraries=services,clusterer"></script>
<script>
document.getElementById("propData").style.display ="none";

var markers = [];
var mapContainer = document.getElementById('map'),
    mapOption = {
        center: new kakao.maps.LatLng(37.566826, 126.9786567),
        level: 13
    };

var map = new kakao.maps.Map(mapContainer, mapOption); 
var mapTypeControl = new kakao.maps.MapTypeControl(); // 일반 지도와 스카이뷰 지도 타입 전환 할 수 있는 지도타입 컨트롤 생성
var zoomControl = new kakao.maps.ZoomControl();       // 지도 확대 축소 제어할 수 있는 줌 컨트롤 생성
var infowindow = new kakao.maps.InfoWindow({zIndex:1});

map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT); // 오른쪽 위로 컨트롤 위치 지정
map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

// 마커 클러스터러를 생성
var clusterer = new kakao.maps.MarkerClusterer({
    map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체 
    averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정 
    minLevel: 10 // 클러스터 할 최소 지도 레벨 
});

var propDataElement = document.getElementById('propData');
var properties = JSON.parse(propDataElement.innerText);
console.log(properties);

// 페이지당 표시할 부동산 수
// 페이지당 표시할 부동산 수
var pageSize = 7;
var currentPage = 1;

function displayProperties() {
    var listEl = document.getElementById('placesList'), 
        menuEl = document.getElementById('menu_wrap'),
        fragment = document.createDocumentFragment(), 
        bounds = new kakao.maps.LatLngBounds(), 
        listStr = '';
    
    removeAllChildNods(listEl);                                         // 검색 결과 목록에 추가된 항목들을제거
    removeMarker();                                                     // 지도에 표시되고 있는 마커 제거
    
    var start = (currentPage - 1) * pageSize;                           // 
    var end = start + pageSize;
    var pagedProperties = properties.slice(start, end);
    
    for ( var i = 0; i < pagedProperties.length; i++ ) {
        var propertyPosition = new kakao.maps.LatLng(pagedProperties[i].lat, pagedProperties[i].lng),
            marker = createMarker(propertyPosition, i, pagedProperties[i].propTitle), 
            itemEl = getListItem(i, pagedProperties[i]); 

        bounds.extend(propertyPosition);

        (function(marker, propertyPosition, property) {
            var infowindow = new kakao.maps.InfoWindow({
                content: '<div style="padding:5px;z-index:1;">' + property.propTitle + '<br> 주소 : ' + property.propAddress + '<br> 매매가 : ' + property.propPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</div>'
            });

            kakao.maps.event.addListener(marker, 'mouseover', function() {
                infowindow.open(map, marker);
            });

            kakao.maps.event.addListener(marker, 'mouseout', function() {
                infowindow.close();
            });

            itemEl.onmouseover = function() {
                displayInfowindow(marker, property.propTitle);
            };

            itemEl.onmouseout = function() {
                infowindow.close();
            };

            itemEl.onclick = function() {
                map.panTo(propertyPosition);                    // 클릭시 해당 아이템 좌표이동
            };
        })(marker, propertyPosition, pagedProperties[i]);

        markers.push(marker);
        fragment.appendChild(itemEl);
    }

    clusterer.addMarkers(markers); // 클러스터러에 마커들을 추가
    listEl.appendChild(fragment);
    menuEl.scrollTop = 0;

    map.setBounds(bounds);
    
    displayPagination();
}

function displayPagination() {
    var paginationEl = document.getElementById('pagination');
    removeAllChildNods(paginationEl);
    
    var totalPages = Math.ceil(properties.length / pageSize);
    
    for (var i = 1; i <= totalPages; i++) {
        var pageEl = document.createElement('a');
        pageEl.href = "#";
        pageEl.innerText = i;
        
        if (i === currentPage) {
            pageEl.className = "on";
        } else {
            pageEl.onclick = (function(page) {
                return function() {
                    currentPage = page;
                    displayProperties();
                }
            })(i);
        }
        
        paginationEl.appendChild(pageEl);
    }
}

function getListItem(index, property) {
    var el = document.createElement('li'),
    itemStr = '<span class="markerbg marker_' + ((currentPage - 1) * pageSize + index + 1) + '"></span>' +
                '<div class="info">' +
                '   <h5>' + property.propTitle + '</h5>' +
                '   <span> 주소 : ' + property.propAddress + '</span>' +
                '  <span class="tel"> 매매가 : ' + property.propPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")  + '원</span>' +
                '</div>';           

    el.innerHTML = itemStr;
    el.className = 'item';

    return el;
}

function createMarker(position, idx, title) {
    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png',       // 마커 이미지 url
        imageSize = new kakao.maps.Size(31, 35),                                                            // 마커 이미지 크기
        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, new kakao.maps.Point(13, 34)),
        marker = new kakao.maps.Marker({
            position: position,
            image: markerImage,
            clickable: true
        });

    return marker;
}

function removeMarker() {
    for ( var i = 0; i < markers.length; i++ ) {
        markers[i].setMap(null);
    }   
    markers = [];
}

function displayInfowindow(marker, title) {
    var content = '<div style="padding:5px;z-index:1;">' + title + '</div>';
    infowindow.setContent(content);
    infowindow.open(map, marker);
}

function removeAllChildNods(el) {   
    while (el.hasChildNodes()) {
        el.removeChild (el.lastChild);
    }
}

// 부동산 목록을 페이지 로드 시 바로 표시하도록 수정
window.onload = function() {
    displayProperties();
};


</script>
</body>
</html>